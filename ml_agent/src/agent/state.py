"""

This module defines the AgentState model, which represents the runtime state
of an AI agent during execution. It tracks the user query, dataset context,
dependencies, generated code, debugging status, and outputs.

The state is updated as the agent processes tasks, enabling debugging,
analysis reporting, and visualization support.
"""

from typing import List, Optional, Dict

from pydantic import BaseModel, Field


class AgentState(BaseModel):
    """
    Data model representing the internal state of the AI agent.

    Attributes:
        question:
            The user's query to be processed by the agent.

        dataset_summary:
            A textual summary of the dataset context provided to the agent.

        dependencies:
            List of package/module dependencies available for code execution.

        code_variables:
            Dictionary of in-memory variables (e.g., datasets, models) accessible
            during agent execution.

        task:
            The current task the agent is attempting to solve. Defaults to None.

        code:
            The generated code snippet associated with the current task. Defaults to None.

        error_message:
            The latest error message encountered during execution or debugging.

        max_debugging_attempts:
            Maximum number of retries allowed for debugging. Default is 5.

        current_debugging_attempt:
            The current debugging attempt counter. Starts at 1.

        analysis_response:
            The structured analysis output from the agent (e.g., text or structured data).
            Defaults to an empty list.

        visualization:
            Base64-encoded image or visualization output generated by the agent.
    """

    # --------------------
    question: str
    dataset_summary: str
    dependencies: List[str]
    code_variables: Dict

    # --------------------
    task: Optional[str] = Field(default=None)
    code: Optional[str] = Field(default=None)

    # --------------------
    error_message: Optional[str] = Field(default=None)
    max_debugging_attempts: int = Field(default=5)
    current_debugging_attempt: int = Field(default=1)

    # --------------------
    analysis_response: Optional[List] = Field(default_factory=list)
    visualization: Optional[str] = Field(default=None)
